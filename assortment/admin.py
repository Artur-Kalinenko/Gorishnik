from django.contrib import admin
from django.core.exceptions import ValidationError
from django.forms.models import BaseInlineFormSet

from .models import (
    Assortment, AssortmentVariant, Category,
    FilterGroup, FilterOption, Tag, AssortmentAdminForm
)
from producer.models import Producer


# üîπ –ö–∞—Å—Ç–æ–º–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è: –º–∏–Ω–∏–º—É–º 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ñ–ª–∞–≥ "—î –≤–∞—Ä—ñ–∞–Ω—Ç–∏"
class AssortmentVariantInlineFormSet(BaseInlineFormSet):
    def clean(self):
        super().clean()

        if self.instance.has_variants:
            valid_forms = [
                form for form in self.forms
                if not form.cleaned_data.get('DELETE', False)
                   and form.cleaned_data.get('grams') is not None
            ]
            if len(valid_forms) < 2:
                raise ValidationError("–Ø–∫—â–æ —Ç–æ–≤–∞—Ä –º–∞—î –≤–∞—Ä—ñ–∞–Ω—Ç–∏, –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 2.")

            if self.instance.is_discounted:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –≤—Å–µ—Ö –≤–∞–ª–∏–¥–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∑–∞–ø–æ–ª–Ω–µ–Ω old_price
                for form in valid_forms:
                    if not form.cleaned_data.get('old_price'):
                        raise ValidationError("–£—Å—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –∞–∫—Ü—ñ–π–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä—É –ø–æ–≤–∏–Ω–Ω—ñ –º–∞—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω–µ –ø–æ–ª–µ old_price.")


# –í–∞—Ä–∏–∞–Ω—Ç—ã (–≥—Ä–∞–º–º–æ–≤–∫–∏) –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø—Ä—è–º–æ –≤–Ω—É—Ç—Ä–∏ —Ç–æ–≤–∞—Ä–∞
class AssortmentVariantInline(admin.TabularInline):
    model = AssortmentVariant
    formset = AssortmentVariantInlineFormSet
    extra = 1
    fields = ['grams', 'price', 'old_price']
    min_num = 0
    max_num = 10


# –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –º–æ–¥–µ–ª–∏ Assortment (—Ç–æ–≤–∞—Ä)
@admin.register(Assortment)
class AssortmentAdmin(admin.ModelAdmin):
    form = AssortmentAdminForm
    list_display = ['assortment_name', 'get_categories', 'producer', 'price', 'old_price', 'is_discounted', 'is_available']
    list_filter = ['producer', 'is_available', 'is_discounted']
    search_fields = ['assortment_name']
    inlines = [AssortmentVariantInline]
    filter_horizontal = ['filters', 'tags', 'assortment_categories']

    def get_categories(self, obj):
        return ", ".join([cat.category for cat in obj.assortment_categories.all()])
    get_categories.short_description = '–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó'


# –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
@admin.register(Category)
class CategoryAdmin(admin.ModelAdmin):
    list_display = ['category']
    search_fields = ['category']

@admin.register(Tag)
class TagAdmin(admin.ModelAdmin):
    list_display = ['name']
    search_fields = ['name']

# –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø —Ñ–∏–ª—å—Ç—Ä–æ–≤
@admin.register(FilterGroup)
class FilterGroupAdmin(admin.ModelAdmin):
    list_display = ['name']
    search_fields = ['name']

# –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –æ–ø—Ü–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤
@admin.register(FilterOption)
class FilterOptionAdmin(admin.ModelAdmin):
    list_display = ['name', 'group']
    list_filter = ['group']
    search_fields = ['name']
